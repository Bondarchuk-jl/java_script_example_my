/* let students = 100;
students = students + 50;
students += 70;
console.log(students); */


/* const result = 108 + 223 - 2 * 5;
console.log(result); */
// Example 4 - –ö–ª–∞—Å Math

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –∑–∞–æ–∫—Ä—É–≥–ª–µ–Ω—ñ –≤–≥–æ—Ä—É / –≤–Ω–∏–∑ —ñ —Ç.–¥.–∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó value.–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –º–µ—Ç–æ–¥–∏ Math.floor(), Math.ceil() —Ç–∞ Math.round().
// –ü–µ—Ä–µ–≤—ñ—Ä —â–æ –±—É–¥–µ –≤ –∫–æ–Ω—Å–æ–ª—ñ –ø—Ä–∏ –∑–Ω–∞—á–µ–Ω–Ω—è—Ö 27.3 —Ç–∞ 27.9.

// const value = 27.9;

// console.log(Math.floor(value))
// console.log(Math.ceil(value))
// console.log(Math.round(value))
/* 
Example 5 - –®–∞–±–ª–æ–Ω–Ω—ñ —Ä—è–¥–∫–∏

–°–∫–ª–∞–¥–∏ —Ñ—Ä–∞–∑—É –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —à–∞–±–ª–æ–Ω–Ω–∏—Ö —Ä—è–¥–∫—ñ–≤ A has B bots in stock, –¥–µ A, B - –∑–º—ñ–Ω–Ω—ñ –≤—Å—Ç–∞–≤–ª–µ–Ω—ñ –≤ —Ä—è–¥–æ–∫.

const companyName = 'Cyberdyne Systems';
const repairBots = 150;
const defenceBots = 50;
const message = ``;
console.log(message); // "Cyberdyne Systems has 200 bots in stock" 

const companyName = 'Cyberdyne Systems';
const repairBots = 150;
const defenceBots = 50;
const message = `${companyName} has ${repairBots + defenceBots} bots in stock`;
console.log(message);*/
/* Example 6 - –ú–µ—Ç–æ–¥–∏ —Ä—è–¥–∫—ñ–≤ —Ç–∞ —á–µ–π–Ω—ñ–Ω–≥

–ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π —Ä–æ–∑—Ä–∞—Ö–æ–≤—É—î —ñ–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –ª—é–¥–∏–Ω–∏. –î–ª—è —Ü—å–æ–≥–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ —Ä–æ–∑–¥—ñ–ª–∏—Ç–∏ –≤–∞–≥—É –≤ –∫—ñ–ª–æ–≥—Ä–∞–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤–∏—Å–æ—Ç–∏ –ª—é–¥–∏–Ω–∏ —É –º–µ—Ç—Ä–∞—Ö.

–í–∞–≥–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω–∏—Ö weight —Ç–∞ height, –∞–ª–µ –Ω–µ —è–∫ —á–∏—Å–ª–∞, –∞ –≤ –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫—ñ–≤ (—Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ –¥–ª—è –∑–∞–≤–¥–∞–Ω–Ω—è). –ù–µ —Ü—ñ–ª—ñ —á–∏—Å–ª–∞ –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∑–∞–¥–∞–Ω—ñ —É –≤–∏–≥–ª—è–¥—ñ 24.7 –∞–±–æ 24,7, —Ç–æ–±—Ç–æ —è–∫ —Ä–æ–∑–¥—ñ–ª—å–Ω–∏–∫ –¥—Ä–æ–±–æ–≤–æ—ó —á–∞—Å—Ç–∏–Ω–∏ –º–æ–∂–µ –±—É—Ç–∏ –∫–æ–º–∞.

–Ü–Ω–¥–µ–∫—Å –º–∞—Å–∏ —Ç—ñ–ª–∞ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ –æ–∫—Ä—É–≥–ª–∏—Ç–∏ –¥–æ –æ–¥–Ω—ñ—î—ó —Ü–∏—Ñ—Ä–∏ –ø—ñ—Å–ª—è –∫–æ–º–∏;

 
let weight = '88,3';
let height = '1.75';
weight = Number(weight.replace(",", "."));
height = +height.replace(",", ".");

console.log(weight);
console.log(height);

// const bmi = weight / (height * height);
// const bmi = weight / height ** 2; 
const bmi =Number(( weight / Math.pow(height, 2)).toFixed(1));


console.log(bmi); // 28.8*/

// Example 7 - –û–ø–µ—Ä–∞—Ç–æ—Ä–∏ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —Ç–∞ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—è —Ç–∏–ø—ñ–≤

// –Ø–∫–∏–º –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏—Ä–∞–∑—ñ–≤?

// console.log(5 > 4);
// true

// console.log(10 >= '7');

// console.log('2' > '12'); –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è —á–µ—Ä–µ–∑ —Ç–∞–±–ª–∏—Ü—é —é–Ω—ñ–∫–æ–¥—ñ–≤
// —é–Ω—ñ –∫–æ–¥ –º–∞–ª–µ–Ω—å–∫–∏—Ö –≤–∏—â–µ –Ω—ñ–∂ –≤–µ–ª–∏–∫–∏—Ö

// console.log('2' < '12');

// console.log('4' == 4);

// console.log('6' === 6);

// console.log('false' === false);

// console.log(1 == true);

// console.log(1 === true);

// console.log('0' == false);

// console.log('0' === false);

// console.log('Papaya' < 'papaya');

// console.log('Papaya' === 'papaya');

// console.log(undefined == null);

// console.log(undefined === null);
// Example 8 - –õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏

// –Ø–∫–∏–º –±—É–¥–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–∏—Ä–∞–∑—ñ–≤?

// console.log(true && 3);

// console.log(false && 3);

// console.log(true && 4 && 'kiwi');

// console.log(true && 0 && 'kiwi');

// console.log(true || 3);

// console.log(true || 3 || 4);

// console.log(true || false || 7);

// console.log(null || 2 || undefined);

// console.log((1 && null && 2) > 0);

// console.log(null || (2 && 3) || 4);


// function formatMessage(message, maxLength) {
//   let result;
//   // Change code below this line
// if (maxLength >=message) {
//   result = message;
// }
//   else {
//     // result = message.slice(0, maxLength);
//     result =`${message.slice(0, maxLength)}...`;
//   }
//   /// Change code above this line
//   return result;
// }

// formatMessage('Nunc sed turpis a felis in nunc fringilla', 15);
// function checkForSpam(message) {
//   let result;
//   message = message.toLowerCase();
//   console.log(message)
//   // Change code below this line
// result = message.includes("sale") || message.includes("spam");

//   // Change code above this line
//   return result;
// }

// Example 1 - –ë–∞–∑–æ–≤—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –º–∞—Å–∏–≤–æ–º

//     –°—Ç–≤–æ—Ä—ñ—Ç—å –º–∞—Å–∏–≤ genres –∑ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏ ¬´Jazz¬ª —Ç–∞ ¬´Blues¬ª.
//     –î–æ–¥–∞–π—Ç–µ ¬´–†–æ–∫-–Ω-—Ä–æ–ª¬ª –¥–æ –∫—ñ–Ω—Ü—è.
//     –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
//     –í–∏–≤–µ–¥—ñ—Ç—å —É –∫–æ–Ω—Å–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É. –ö–æ–¥ –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –º–∞—Å–∏–≤—É –¥–æ–≤—ñ–ª—å–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏.
//     –í–∏–¥–∞–ª—ñ—Ç—å –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç —Ç–∞ –≤–∏–≤–µ–¥—ñ—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.
//     –í—Å—Ç–∞–≤—Ç–µ ¬´Country¬ª —Ç–∞ ¬´Reggae¬ª –Ω–∞ –ø–æ—á–∞—Ç–æ–∫ –º–∞—Å–∏–≤—É.

// const genres = ["Jazz", "Blues"];
// genres.push("Rock");
// console.log(genres.length)
// console.log(genres[genres.length - 1])
// console.log(genres.slice(0, 1)[0])
// Example 2 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –ø–ª–æ—â—ñ –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫–∞ –∑—ñ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫–∏—Ö –∑–±–µ—Ä—ñ–≥–∞—é—Ç—å—Å—è —É –∑–º—ñ–Ω–Ω—ñ–π values —É –≤–∏–≥–ª—è–¥—ñ —Ä—è–¥–∫–∞. –ó–Ω–∞—á–µ–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç–æ–≤–∞–Ω–æ —Ä–æ–∑–¥—ñ–ª–µ–Ω—ñ –ø—Ä–æ–±—ñ–ª–æ–º.

//
// const values = '8 11';
// const valuesArray = values.split(" ");
// const a = Number (valuesArray[0])
// const b = Number(valuesArray[1]);
// const square = a * b;
// console.log(square)

// Example 3 - –ü–µ—Ä–µ–±—ñ—Ä –º–∞—Å–∏–≤—É

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä—É –º–∞—Å–∏–≤—É fruits —Ü–∏–∫–ª–æ–º for.
// –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å–∏–≤—É –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ
// –Ω–æ–º–µ—Ä_–µ–ª–µ–º–µ–Ω—Ç–∞: –∑–Ω–∞—á–µ–Ω–Ω—è_–µ–ª–µ–º–µ–Ω—Ç–∞.–ù—É–º–µ—Ä–∞—Ü—ñ—è –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ –ø–æ–≤–∏–Ω–Ω–∞ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ 1.

// const fruits = ['üçé', 'üçá', 'üçë', 'üçå', 'üçã'];
// // for (let i = 0; i < fruits.length; i + - 1)
// // console.log(` ${i+1}: ${fruits[i]}`)
// for (const fruit of fruits) {
//   console.log(fruit);
// }
// Example 5 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç—å —É –∫–æ–Ω—Å–æ–ª—å —É—Å—ñ —Å–ª–æ–≤–∞ —Ä—è–¥–∫–∞ –∫—Ä—ñ–º
// –ø–µ—Ä—à–æ–≥–æ —ñ –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ.–†–µ–∑—É–ª—å—Ç—É—é—á–∏–π —Ä—è–¥–æ–∫ –Ω–µ –ø–æ–≤–∏–Ω–µ–Ω
// –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∞–±–æ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è —Å–∏–º–≤–æ–ª –ø—Ä–æ–±—ñ–ª—É.–°–∫—Ä–∏–ø—Ç
// –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –¥–ª—è –±—É–¥—å - —è–∫–æ–≥–æ —Ä—è–¥–∫–∞.

// const string = 'Welcome to the future';
// –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤ —Å—Ç—Ä–æ–∫—É
// const strArray = string.split(" ");
// –≤–∏–¥–∞–ª—è–µ–º–æ –ø–µ—Ä—à–∏–π –µ–ª–µ–º–µ–Ω—Ç
// strArray.shift()
// –≤–∏–¥–∞–ª—è–µ–º–æ –æ—Å—Ç–∞–Ω–Ω—ñ–π –µ–ª–µ–º–µ–Ω—Ç
// strArray.pop();
// –ø–µ—Ä–µ–≤–æ–¥–∏–º–æ –¥–æ —Å—Ç—Ä–æ–∫–∏ –∑ –ø—Ä–æ–±—ñ–ª–æ–º
// const newString = strArray.join(" ")


// Example 6 - –ú–∞—Å–∏–≤–∏ —Ç–∞ —Ä—è–¥–∫–∏

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π ¬´—Ä–æ–∑–≥–æ—Ä—Ç–∞—î¬ª —Ä—è–¥–æ–∫
//   (–∑–≤–æ—Ä–æ—Ç–Ω–∏–π –ø–æ—Ä—è–¥–æ–∫ –±—É–∫–≤) —ñ –≤–∏–≤–æ–¥–∏—Ç—å –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å.

// const string = 'Welcome to the future';
// const strArray = string.split(" ");
// strArray.reverse()
// const strNew = strArray.join(" ");
// abo
 
// const reverseStr = string.split("").reverse().join("")

// const string = 'Welcome to the future';
// 1. —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –º–∞—Å–∏–≤—É —è–∫–∞ –±—É–¥–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ñ –Ω–∞–∫–æ–ø–∏—á—É–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è
// 2. –∑—Ä–æ–±–∏—Ç–∏ —ñ–∑ —Å—Ç—Ä–æ–∫–∏ –º–∞—Å–∏–≤ —ñ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –π–æ–≥–æ –∑–∞–¥–æ–º –Ω–∞–ø–µ—Ä–µ–¥
// 3. –ø—É—à–∏—Ç–∏ –≤ –º–∞—Å–∏–≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É –ø–æ—Ç–æ—á–Ω–∏–π —Å–∏–º–≤–æ–ª
// 4. —Ä–æ–±–∏–º–æ —ñ–∑ –º–∞—Å–∏–≤—É —Ä–µ–∑–µ–ª—å—Ç—É—Ç—É —Å—Ç—Ä–æ–∫—É
// let newString = [];
// const stringArray = string.split("");
// for (i = stringArray.length - 1; i >= 0; i -= 1) {
//   console.log(stringArray[i]);
// newString.push(stringArray[i])
// }
// newString = newString.join("")
// console.log(newString)
// —è–∫ –∑–º—ñ–Ω–∏—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ –º—ñ—Å—Ü—è–º–∏
// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// let temp = langs[1]
// langs[1] = langs[2]
// langs[2]=temp
// Example 7 - –°–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —ñ–∑ —Ü–∏–∫–ª–æ–º

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –º–∞—Å–∏–≤—É —Ä—è–¥–∫—ñ–≤
// –≤ –∞–ª—Ñ–∞–≤—ñ—Ç–Ω–æ–º—É –ø–æ—Ä—è–¥–∫—É –∑–∞ –ø–µ—Ä—à–æ—é –ª—ñ—Ç–µ—Ä–æ—é –µ–ª–µ–º–µ–Ω—Ç–∞.
// lengs.sort
// const langs = ['python', 'javascript', 'c++', 'haskel', 'php', 'ruby'];
// 1. –∑–∞–ø—É—Å—Ç–∏—Ç–∏ —Ü–∏–∫–ª, —è–∫–∏–π –ø—Ä–æ—Ö–æ–¥–∏—Ç—å—Å—è –ø–æ –≤—Å—ñ–º i–Ω–¥–µ–∫—Å–∞–º –µ–ª–µ–º–µ–Ω—Ç–∞–º
// 2 –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –≤–∫–ª–∞–¥–µ–Ω–∏–π —Ü–∏–∫–ª —è–∫–∏–π –±—É–¥–µ –ø–æ—á–∏–Ω–∞—Ç–∏—Å—å –∑ 1 —à–Ω–¥–µ–∫—Å—É –Ω–µ –Ω—É–ª—å–æ–≤–æ–≥–æ
// 3 –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø—Ä–µ—à—ñ –±—É–∫–≤–∏ —Å—É—Å—ñ–¥–Ω—ñ—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤
// 3.1 —è–∫—â–æ –±—É–≤–∞ –∑–ª—ñ–≤–∞ –±—ñ–ª—å—à–∞ –∑–∞ –±—É–∫–≤—É —Å–ø—Ä–∞–≤–∞ —Ç–æ –º—ñ–Ω—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –º—ñ—Å—Ü—è–º–∏

// for (let i = 0; i < langs.length; i += 1) {
//   console.log(`El: ${langs[i]} | i: ${i}`)
//   for (let j = 1; j < langs.length; j += 1){
    
//   }
// }
// function makeArray(firstArray, secondArray, maxLength) {
//     // Change code below this line
//   let doArray = firstArray.concat(secondArray);
//   if ( doArray.length > maxLength) {
//     let forArray = doArray.slice(0, maxLength);
//     return forArray;
//   } else {
//     return doArray;
//   }


    // Change code above this line
//   // }
// function calculateTotal(number) {
//  // Change code below this line
//   let summa = 0
//   for (let i = 1; i <= number; i += 1) {
//      summa = summa + i
//   }
//   console.log(summa)
//   // return summa

//   // Change code above this line
// }
// const fruits = ['apple', 'plum', 'pear', 'orange'];

// for (let i = 0;  i < fruits.length; i+=1 ) { // Change this line
//   const fruit = fruits[i]; // Change this line
//   console.log(fruit);
// }
// function calculateTotalPrice(order) {
//   let total = 0;
 
//   // Change code below this line
// for( i=0; i<=order[i]; i++ ) {
//   total = total + order[i];
// }
//   // Change code above this line
//   return total;
// }
// function calculateTotalPrice(order) {
//   let total = 0;
 
//   // Change code below this line
// for( const valueAll of order ) {
//   total +=valueAll;
// }
//   // Change code above this line
//   return total;
// }
// function findLongestWord(string) {
//   // Change code below this line
// let strAll = string.split(" ")
//   for (let i = 0; i <= strAll[i]; i+=1 ){
//  return string[i]
// }




//   // Change code above this line
//   return strAll
// }
// function findLongestWord(string) {
//   // Change code below this line
//   let longFF = string.split(" ")
// let longName = "";
// for ( const londerS of longFF) {
  
//     if (londerS.length > longName.length){
//       longName = londerS;
//     }
// }

// // for (let i = 0; i >= string; i+=1 ){
// //  strAll = strAll + string[i]
// // }


//   // Change code above this line
//   return longName;
// }

// function createArrayOfNumbers(min, max) {
//   const numbers = [];
//   let total =0 ;
//   // const catT = min.concat(max)
//   // Change code below this line
// for( i = 0; i<=min; i => max){
//   total = min.push(1);
// }
//   // Change code above this line
//   return numbers;
// }
// function createArrayOfNumbers(min, max) {
//   const numbers = [min, max];
  

//   // Change code below this line
//   for (let i= 0; i = max.length; i + 1)
//   {
//     numbers += min[i];
// }
//   // Change code above this -
//   return numbers;
// }
// function filterArray(numbers, value) {
//   const newNumbers= []
//    // Change code below this line
//   for (let i = 1; i <= numbers.length; i++){
//   if (numbers[i]>value){
//   newNumbers.push(numbers[i])}
// }
// return newNumbers

//   // Change code above this line
// }
// function getCommonElements(array1, array2) {
//   // Change code below this line
//   let array3 = []
//   const hasArray = array1.includes(array2);
//   for ( let i =0; i<=array1.lenght; i +=1 )
//   if ( array1[i]>= array1[i].includes(array2[i])){
//     array3.push(array1[i])
//   }

// return array3
//  // Change code above this line

// function getCommonElements(array1, array2) {
//   // Change code below this line
//   let array3 = []
//   // const hasArray = array1.includes(array2);
//   for (const newArray of array1) {
//     if ( newArray === array2)
//   }
  

// return array3
//  // Change code above this line
// }
// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];
// // const keys = Object.keys(products)
// // const values = Object.values(products)
// function getProductPrice(productName) {
//   // Change code below this line
// for ( const product of products){
//   if ( product.name === productName){
//    return product.price
//   }
//   return null
// }


//   // Change code above this line
// }

// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];
// const keys = []
// const allKeys = Object.keys(products)
//  const value = Object.values(products)
// function getAllPropValues(propName) {
//   // Change code below this line
 
// for( const product of products) {
//    keys.push(products[value])
// }

//   // Change code above this line
// }
// const products = [
//   { name: "Radar", price: 1300, quantity: 4 },
//   { name: "Scanner", price: 2700, quantity: 3 },
//   { name: "Droid", price: 400, quantity: 7 },
//   { name: "Grip", price: 1200, quantity: 9 },
// ];

// function calculateTotalPrice(productName) {
  
// for ( const product of products){
//   // if (!(productName in product)) {return 0}
//    if ( product.name === productName){
//   return product.price*product.quantity
// }
//   else (!(productName in product)) return 0;
// }
//   // Change code above this line
// }
// function makeTask(data) {
//   const completed = false;
//   const category = "General";
//   const priority = "Normal";
//   // Change code below this line
//  const newData = {...data}
// const  {completed:newCompleted ,category: newCategory, priority:newPriority, text  } = newData
//   // Change code above this line
  
// }

// function makePizza(pizzaName, callback) {
//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);
//   callback(pizzaName);
// }

// makePizza("Royal Grand", function deliverPizza(pizzaName) {
  
//   console.log(`Delivering pizza ${pizzaName}.`);
// };
// // Change code below this line

// makePizza("Ultracheese", function eatPizza(pizzaName){
//   console.log (`Eat pizza ${pizzaName}.`)
// };
function makeTask(data) {
  // const completed = false;
  // const category = "General";
  // const priority = "Normal";
  // Change code below this line
const {completed, category, priority} = data;
const newData = {...data}
  const { completed: newCompleted, text } = newData;
   
  return newData;

  // Change code above this line
}

